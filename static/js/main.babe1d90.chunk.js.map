{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/TextField/TextField.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","TextField","name","value","label","placeholder","required","onChange","pattern","useState","Math","random","toFixed","slice","id","errorMessage","setErrorMessage","touched","setTouched","hasError","match","htmlFor","type","classNames","event","target","onBlur","NewMovie","onAdd","count","setCount","formValues","setFormValues","handleChange","prevState","onSubmit","preventDefault","disabled","trim","isButtonDisabled","App","moviesFromServer","allMovies","setAllMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.babe1d90.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movie-card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\n\ntype Props = {\n  name: string,\n  value: string,\n  label?: string,\n  placeholder?: string,\n  required?: boolean,\n  onChange?: (newValue: string) => void,\n};\n\nfunction getRandomDigits() {\n  return Math.random()\n    .toFixed(16)\n    .slice(2);\n}\n\nexport const TextField: React.FC<Props> = ({\n  name,\n  value,\n  label = name,\n  placeholder = `Enter ${label}`,\n  required = false,\n  onChange = () => {},\n}) => {\n  // eslint-disable-next-line max-len\n  const pattern = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@,.\\w_]*)#?(?:[,.!/\\\\\\w]*))?)$/;\n  const [id] = useState(() => `${name}-${getRandomDigits()}`);\n  const [errorMessage, setErrorMessage] = useState(`${label} is required`);\n  // To show errors only if the field was touched (onBlur)\n  const [touched, setTouched] = useState(false);\n  const hasError = () => {\n    if ((name === 'imgUrl' || name === 'imdbUrl') && value) {\n      return touched && required && !value.match(pattern);\n    }\n\n    return touched && required && !value;\n  };\n\n  const handleOnBlur = () => {\n    if ((name === 'imgUrl' || name === 'imdbUrl')\n    && value && !value.match(pattern)) {\n      setErrorMessage('Wrong URL input');\n    } else {\n      setErrorMessage(`${label} is required`);\n    }\n\n    setTouched(true);\n  };\n\n  return (\n    <div className=\"field\">\n      <label className=\"label\" htmlFor={id}>\n        {label}\n      </label>\n\n      <div className=\"control\">\n        <input\n          type=\"text\"\n          id={id}\n          data-cy={`movie-${name}`}\n          className={classNames('input', {\n            'is-danger': hasError(),\n          })}\n          placeholder={placeholder}\n          value={value}\n          onChange={event => onChange(event.target.value)}\n          onBlur={handleOnBlur}\n        />\n      </div>\n\n      {hasError() && (\n        <p className=\"help is-danger\">{errorMessage}</p>\n      )}\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { TextField } from '../TextField';\nimport { Movie } from '../../types/Movie';\n\ntype MovieProps = {\n  onAdd: (movie: Movie) => void;\n};\n\nexport const NewMovie = ({ onAdd }: MovieProps) => {\n  const [count, setCount] = useState(0);\n\n  const [formValues, setFormValues] = useState({\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n  });\n\n  const isButtonDisabled = () => {\n    const {\n      title,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    } = formValues;\n\n    return !(title.trim() && imgUrl.trim()\n      && imdbUrl.trim() && imdbId.trim());\n  };\n\n  const handleChange = (value: string, name: string) => {\n    setFormValues((prevState) => ({\n      ...prevState,\n      [name]: value,\n    }));\n  };\n\n  const reset = () => {\n    setFormValues({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    });\n  };\n\n  const handleSubmit = ((event: React.FormEvent) => {\n    event.preventDefault();\n\n    onAdd(formValues);\n\n    setCount(count + 1);\n    reset();\n  });\n\n  return (\n    <form className=\"NewMovie\" onSubmit={handleSubmit}>\n      <h2 className=\"title\">Add a movie</h2>\n\n      <TextField\n        name=\"title\"\n        label=\"Title\"\n        value={formValues.title}\n        onChange={(value) => handleChange(value, 'title')}\n        required\n      />\n\n      <TextField\n        name=\"description\"\n        label=\"Description\"\n        value={formValues.description}\n        onChange={(value) => handleChange(value, 'description')}\n      />\n\n      <TextField\n        name=\"imgUrl\"\n        value={formValues.imgUrl}\n        onChange={(value) => handleChange(value, 'imgUrl')}\n        required\n      />\n\n      <TextField\n        name=\"imdbUrl\"\n        value={formValues.imdbUrl}\n        onChange={(value) => handleChange(value, 'imdbUrl')}\n        required\n      />\n\n      <TextField\n        name=\"imdbId\"\n        label=\"Imdb ID\"\n        value={formValues.imdbId}\n        onChange={(value) => handleChange(value, 'imdbId')}\n        required\n      />\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            data-cy=\"submit-button\"\n            className=\"button is-link\"\n            disabled={isButtonDisabled()}\n          >\n            Add\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import './App.scss';\nimport { useState } from 'react';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [allMovies, setAllMovies] = useState(moviesFromServer);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={allMovies} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie\n          onAdd={(movie: Movie) => setAllMovies([...allMovies, movie])}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}